// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(KeyZoneContext))]
    partial class KeyZoneContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Juego", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desarrollador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.Property<DateTime>("FechaLanzamiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("RequisitosMinId")
                        .HasColumnType("int");

                    b.Property<int>("RequisitosRecId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequisitosMinId");

                    b.HasIndex("RequisitosRecId");

                    b.ToTable("Juegos");
                });

            modelBuilder.Entity("Core.Entities.JuegoPlataforma", b =>
                {
                    b.Property<int>("IdJuego")
                        .HasColumnType("int");

                    b.Property<int>("IdPlataforma")
                        .HasColumnType("int");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.Property<string>("Stock")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdJuego", "IdPlataforma");

                    b.HasIndex("IdPlataforma");

                    b.ToTable("JuegosPlataformas");
                });

            modelBuilder.Entity("Core.Entities.Plataforma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plataformas");
                });

            modelBuilder.Entity("Core.Entities.RequisitosMin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Almacenamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Directx")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Graficos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Memoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procesador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Red")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequisitosMin");
                });

            modelBuilder.Entity("Core.Entities.RequisitosRec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Almacenamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Directx")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Graficos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Memoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procesador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Red")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequisitosRec");
                });

            modelBuilder.Entity("Core.Entities.Juego", b =>
                {
                    b.HasOne("Core.Entities.RequisitosMin", "RequisitosMin")
                        .WithMany()
                        .HasForeignKey("RequisitosMinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.RequisitosRec", "RequisitosRec")
                        .WithMany()
                        .HasForeignKey("RequisitosRecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.JuegoPlataforma", b =>
                {
                    b.HasOne("Core.Entities.Juego", "juego")
                        .WithMany("JuegosPlataforma")
                        .HasForeignKey("IdJuego")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Plataforma", "plataforma")
                        .WithMany("JuegosPlataformas")
                        .HasForeignKey("IdPlataforma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
